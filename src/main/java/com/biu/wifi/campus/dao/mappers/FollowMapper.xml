<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.FollowMapper">
    <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.Follow">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="follower_id" jdbcType="INTEGER" property="followerId"/>
        <result column="be_followed_id" jdbcType="INTEGER" property="beFollowedId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_two_way" jdbcType="SMALLINT" property="isTwoWay"/>
        <result column="is_cancel" jdbcType="SMALLINT" property="isCancel"/>
        <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, follower_id, be_followed_id, create_time, is_two_way, is_cancel, cancel_time
  </sql>
    <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.FollowCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from biu_follow
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biu_follow
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_follow
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.FollowCriteria">
        delete from biu_follow
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.Follow"
            useGeneratedKeys="true">
    insert into biu_follow (follower_id, be_followed_id, create_time, 
      is_two_way, is_cancel, cancel_time
      )
    values (#{followerId,jdbcType=INTEGER}, #{beFollowedId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isTwoWay,jdbcType=SMALLINT}, #{isCancel,jdbcType=SMALLINT}, #{cancelTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.Follow"
            useGeneratedKeys="true">
        insert into biu_follow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="followerId != null">
                follower_id,
            </if>
            <if test="beFollowedId != null">
                be_followed_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isTwoWay != null">
                is_two_way,
            </if>
            <if test="isCancel != null">
                is_cancel,
            </if>
            <if test="cancelTime != null">
                cancel_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="followerId != null">
                #{followerId,jdbcType=INTEGER},
            </if>
            <if test="beFollowedId != null">
                #{beFollowedId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isTwoWay != null">
                #{isTwoWay,jdbcType=SMALLINT},
            </if>
            <if test="isCancel != null">
                #{isCancel,jdbcType=SMALLINT},
            </if>
            <if test="cancelTime != null">
                #{cancelTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.FollowCriteria"
            resultType="java.lang.Long">
        select count(*) from biu_follow
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biu_follow
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.followerId != null">
                follower_id = #{record.followerId,jdbcType=INTEGER},
            </if>
            <if test="record.beFollowedId != null">
                be_followed_id = #{record.beFollowedId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isTwoWay != null">
                is_two_way = #{record.isTwoWay,jdbcType=SMALLINT},
            </if>
            <if test="record.isCancel != null">
                is_cancel = #{record.isCancel,jdbcType=SMALLINT},
            </if>
            <if test="record.cancelTime != null">
                cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biu_follow
        set id = #{record.id,jdbcType=INTEGER},
        follower_id = #{record.followerId,jdbcType=INTEGER},
        be_followed_id = #{record.beFollowedId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_two_way = #{record.isTwoWay,jdbcType=SMALLINT},
        is_cancel = #{record.isCancel,jdbcType=SMALLINT},
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.Follow">
        update biu_follow
        <set>
            <if test="followerId != null">
                follower_id = #{followerId,jdbcType=INTEGER},
            </if>
            <if test="beFollowedId != null">
                be_followed_id = #{beFollowedId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isTwoWay != null">
                is_two_way = #{isTwoWay,jdbcType=SMALLINT},
            </if>
            <if test="isCancel != null">
                is_cancel = #{isCancel,jdbcType=SMALLINT},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.Follow">
    update biu_follow
    set follower_id = #{followerId,jdbcType=INTEGER},
      be_followed_id = #{beFollowedId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_two_way = #{isTwoWay,jdbcType=SMALLINT},
      is_cancel = #{isCancel,jdbcType=SMALLINT},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>