<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.SchoolDepartMapper">
    <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.SchoolDepart">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="level" jdbcType="SMALLINT" property="level"/>
        <result column="person_num" jdbcType="INTEGER" property="personNum"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_delete" jdbcType="SMALLINT" property="isDelete"/>
        <result column="is_major" jdbcType="SMALLINT" property="isMajor"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, pid, name, level, person_num, school_id, create_time, update_time, is_delete, 
    is_major
  </sql>
    <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.SchoolDepartCriteria"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from biu_school_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biu_school_depart
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_school_depart
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.SchoolDepartCriteria">
        delete from biu_school_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.SchoolDepart"
            useGeneratedKeys="true">
    insert into biu_school_depart (pid, name, level, 
      person_num, school_id, create_time, 
      update_time, is_delete, is_major
      )
    values (#{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=SMALLINT}, 
      #{personNum,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=SMALLINT}, #{isMajor,jdbcType=SMALLINT}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.biu.wifi.campus.dao.model.SchoolDepart" useGeneratedKeys="true">
        insert into biu_school_depart
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="personNum != null">
                person_num,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="isMajor != null">
                is_major,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=SMALLINT},
            </if>
            <if test="personNum != null">
                #{personNum,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="isMajor != null">
                #{isMajor,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.SchoolDepartCriteria"
            resultType="java.lang.Long">
        select count(*) from biu_school_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biu_school_depart
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=SMALLINT},
            </if>
            <if test="record.personNum != null">
                person_num = #{record.personNum,jdbcType=INTEGER},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=SMALLINT},
            </if>
            <if test="record.isMajor != null">
                is_major = #{record.isMajor,jdbcType=SMALLINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biu_school_depart
        set id = #{record.id,jdbcType=INTEGER},
        pid = #{record.pid,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        level = #{record.level,jdbcType=SMALLINT},
        person_num = #{record.personNum,jdbcType=INTEGER},
        school_id = #{record.schoolId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_delete = #{record.isDelete,jdbcType=SMALLINT},
        is_major = #{record.isMajor,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.SchoolDepart">
        update biu_school_depart
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=SMALLINT},
            </if>
            <if test="personNum != null">
                person_num = #{personNum,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="isMajor != null">
                is_major = #{isMajor,jdbcType=SMALLINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.SchoolDepart">
    update biu_school_depart
    set pid = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=SMALLINT},
      person_num = #{personNum,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=SMALLINT},
      is_major = #{isMajor,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>