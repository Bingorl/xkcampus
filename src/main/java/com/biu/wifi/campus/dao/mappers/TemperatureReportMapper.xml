<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.TemperatureReportMapper">
    <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.TemperatureReport">
        <!--@mbg.generated-->
        <!--@Table biu_temperature_report-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="temperature" jdbcType="DECIMAL" property="temperature"/>
        <result column="report_time" jdbcType="TIMESTAMP" property="reportTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, user_id, temperature, report_time, create_time, update_time, is_delete, delete_time
    </sql>
    <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.TemperatureReportExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from biu_temperature_report
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from biu_temperature_report
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from biu_temperature_report
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.TemperatureReportExample">
        <!--@mbg.generated-->
        delete
        from biu_temperature_report
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.TemperatureReport"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into biu_temperature_report (user_id, temperature, report_time,
                                            create_time, update_time, is_delete,
                                            delete_time)
        values (#{userId,jdbcType=INTEGER}, #{temperature,jdbcType=DECIMAL}, #{reportTime,jdbcType=TIMESTAMP},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER},
                #{deleteTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.biu.wifi.campus.dao.model.TemperatureReport" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into biu_temperature_report
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="temperature != null">
                temperature,
            </if>
            <if test="reportTime != null">
                report_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="temperature != null">
                #{temperature,jdbcType=DECIMAL},
            </if>
            <if test="reportTime != null">
                #{reportTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.TemperatureReportExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*)
        from biu_temperature_report
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update biu_temperature_report
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.temperature != null">
                temperature = #{record.temperature,jdbcType=DECIMAL},
            </if>
            <if test="record.reportTime != null">
                report_time = #{record.reportTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
            <if test="record.deleteTime != null">
                delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update biu_temperature_report
        set id          = #{record.id,jdbcType=INTEGER},
            user_id     = #{record.userId,jdbcType=INTEGER},
            temperature = #{record.temperature,jdbcType=DECIMAL},
            report_time = #{record.reportTime,jdbcType=TIMESTAMP},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            is_delete   = #{record.isDelete,jdbcType=INTEGER},
            delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.TemperatureReport">
        <!--@mbg.generated-->
        update biu_temperature_report
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="temperature != null">
                temperature = #{temperature,jdbcType=DECIMAL},
            </if>
            <if test="reportTime != null">
                report_time = #{reportTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.TemperatureReport">
        <!--@mbg.generated-->
        update biu_temperature_report
        set user_id     = #{userId,jdbcType=INTEGER},
            temperature = #{temperature,jdbcType=DECIMAL},
            report_time = #{reportTime,jdbcType=TIMESTAMP},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            is_delete   = #{isDelete,jdbcType=INTEGER},
            delete_time = #{deleteTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="myTemperatureReportList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biu_temperature_report
                where is_delete = 2
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        order by create_time desc
    </select>

    <select id="search" resultType="java.util.HashMap">
        select a.id,
               a.user_id     userId,
               b.`name`      userName,
               b.`phone`     userNo,
               c.`name`      deptName,
               a.temperature,
               a.report_time reportTime
        from biu_temperature_report a
                     left join biu_user b on a.user_id = b.id
                     left join biu_institute c on b.institute_id = c.id
        where a.is_delete = 2
        <if test="schoolId != null and schoolId != 0">
            and b.school_id=#{schoolId}
        </if>
        <if test="type != null and type!=0">
            <choose>
                <when test="type==1">
                    and a.temperature &lt;=37
                </when>
                <when test="type==2">
                    and a.temperature &gt;37
                </when>
            </choose>
        </if>
        <if test="keyword != null and keyword != ''">
            and concat_ws('',b.`name`,b.`phone`) like concat('%',#{keyword},'%')
        </if>
        <if test="startTime != null and startTime != ''">
            and a.report_time &gt;=#{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and a.report_time &lt;=#{endTime}
        </if>
        order by id desc
    </select>
</mapper>