<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.BiuTravelExpenseAuditUserMapper">
  <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="institute_id" jdbcType="INTEGER" property="instituteId" />
    <result column="audit_user" jdbcType="VARCHAR" property="auditUser" />
    <result column="expense_type" jdbcType="SMALLINT" property="expenseType" />
    <result column="day_type" jdbcType="SMALLINT" property="dayType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="SMALLINT" property="isDelete" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="type" jdbcType="SMALLINT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_id, institute_id, audit_user, expense_type, day_type, create_time, update_time, 
    is_delete, delete_time, `type`
  </sql>
  <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biu_travel_expense_audit_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biu_travel_expense_audit_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_travel_expense_audit_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUserExample">
    delete from biu_travel_expense_audit_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUser" useGeneratedKeys="true">
    insert into biu_travel_expense_audit_user (school_id, institute_id, audit_user, 
      expense_type, day_type, create_time, 
      update_time, is_delete, delete_time, 
      `type`)
    values (#{schoolId,jdbcType=INTEGER}, #{instituteId,jdbcType=INTEGER}, #{auditUser,jdbcType=VARCHAR}, 
      #{expenseType,jdbcType=SMALLINT}, #{dayType,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=SMALLINT}, #{deleteTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUser" useGeneratedKeys="true">
    insert into biu_travel_expense_audit_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="instituteId != null">
        institute_id,
      </if>
      <if test="auditUser != null">
        audit_user,
      </if>
      <if test="expenseType != null">
        expense_type,
      </if>
      <if test="dayType != null">
        day_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="instituteId != null">
        #{instituteId,jdbcType=INTEGER},
      </if>
      <if test="auditUser != null">
        #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="expenseType != null">
        #{expenseType,jdbcType=SMALLINT},
      </if>
      <if test="dayType != null">
        #{dayType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=SMALLINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUserExample" resultType="java.lang.Long">
    select count(*) from biu_travel_expense_audit_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biu_travel_expense_audit_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.instituteId != null">
        institute_id = #{record.instituteId,jdbcType=INTEGER},
      </if>
      <if test="record.auditUser != null">
        audit_user = #{record.auditUser,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseType != null">
        expense_type = #{record.expenseType,jdbcType=SMALLINT},
      </if>
      <if test="record.dayType != null">
        day_type = #{record.dayType,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=SMALLINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biu_travel_expense_audit_user
    set id = #{record.id,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      institute_id = #{record.instituteId,jdbcType=INTEGER},
      audit_user = #{record.auditUser,jdbcType=VARCHAR},
      expense_type = #{record.expenseType,jdbcType=SMALLINT},
      day_type = #{record.dayType,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=SMALLINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      `type` = #{record.type,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUser">
    update biu_travel_expense_audit_user
    <set>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="instituteId != null">
        institute_id = #{instituteId,jdbcType=INTEGER},
      </if>
      <if test="auditUser != null">
        audit_user = #{auditUser,jdbcType=VARCHAR},
      </if>
      <if test="expenseType != null">
        expense_type = #{expenseType,jdbcType=SMALLINT},
      </if>
      <if test="dayType != null">
        day_type = #{dayType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=SMALLINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.BiuTravelExpenseAuditUser">
    update biu_travel_expense_audit_user
    set school_id = #{schoolId,jdbcType=INTEGER},
      institute_id = #{instituteId,jdbcType=INTEGER},
      audit_user = #{auditUser,jdbcType=VARCHAR},
      expense_type = #{expenseType,jdbcType=SMALLINT},
      day_type = #{dayType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=SMALLINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findOne" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from biu_teacher_leave_audit_user
      where institute_id=#{instituteId} and `type`=#{type}
  </select>
</mapper>