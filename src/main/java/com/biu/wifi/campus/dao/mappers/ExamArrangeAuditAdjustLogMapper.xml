<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.ExamArrangeAuditAdjustLogMapper">
  <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exam_arrange_id" jdbcType="INTEGER" property="examArrangeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="old_content" jdbcType="VARCHAR" property="oldContent" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="adjust_user_id" jdbcType="INTEGER" property="adjustUserId" />
    <result column="adjust_time" jdbcType="TIMESTAMP" property="adjustTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, exam_arrange_id, `type`, old_content, content, adjust_user_id, adjust_time
  </sql>
  <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLogCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biu_exam_arrange_audit_adjust_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biu_exam_arrange_audit_adjust_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_exam_arrange_audit_adjust_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLogCriteria">
    delete from biu_exam_arrange_audit_adjust_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLog" useGeneratedKeys="true">
    insert into biu_exam_arrange_audit_adjust_log (exam_arrange_id, `type`, old_content, 
      content, adjust_user_id, adjust_time
      )
    values (#{examArrangeId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{oldContent,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{adjustUserId,jdbcType=INTEGER}, #{adjustTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLog" useGeneratedKeys="true">
    insert into biu_exam_arrange_audit_adjust_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examArrangeId != null">
        exam_arrange_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="oldContent != null">
        old_content,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="adjustUserId != null">
        adjust_user_id,
      </if>
      <if test="adjustTime != null">
        adjust_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examArrangeId != null">
        #{examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="oldContent != null">
        #{oldContent,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="adjustUserId != null">
        #{adjustUserId,jdbcType=INTEGER},
      </if>
      <if test="adjustTime != null">
        #{adjustTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLogCriteria" resultType="java.lang.Long">
    select count(*) from biu_exam_arrange_audit_adjust_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biu_exam_arrange_audit_adjust_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.examArrangeId != null">
        exam_arrange_id = #{record.examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.oldContent != null">
        old_content = #{record.oldContent,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.adjustUserId != null">
        adjust_user_id = #{record.adjustUserId,jdbcType=INTEGER},
      </if>
      <if test="record.adjustTime != null">
        adjust_time = #{record.adjustTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biu_exam_arrange_audit_adjust_log
    set id = #{record.id,jdbcType=INTEGER},
      exam_arrange_id = #{record.examArrangeId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      old_content = #{record.oldContent,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      adjust_user_id = #{record.adjustUserId,jdbcType=INTEGER},
      adjust_time = #{record.adjustTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLog">
    update biu_exam_arrange_audit_adjust_log
    <set>
      <if test="examArrangeId != null">
        exam_arrange_id = #{examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="oldContent != null">
        old_content = #{oldContent,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="adjustUserId != null">
        adjust_user_id = #{adjustUserId,jdbcType=INTEGER},
      </if>
      <if test="adjustTime != null">
        adjust_time = #{adjustTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditAdjustLog">
    update biu_exam_arrange_audit_adjust_log
    set exam_arrange_id = #{examArrangeId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      old_content = #{oldContent,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      adjust_user_id = #{adjustUserId,jdbcType=INTEGER},
      adjust_time = #{adjustTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>