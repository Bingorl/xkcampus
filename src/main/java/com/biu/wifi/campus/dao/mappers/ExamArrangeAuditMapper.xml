<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.ExamArrangeAuditMapper">
  <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.ExamArrangeAudit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exam_arrange_id" jdbcType="INTEGER" property="examArrangeId" />
    <result column="is_pass" jdbcType="INTEGER" property="isPass" />
    <result column="audit_user_id" jdbcType="INTEGER" property="auditUserId" />
    <result column="audit_user_type" jdbcType="INTEGER" property="auditUserType" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="audit_remark" jdbcType="VARCHAR" property="auditRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, exam_arrange_id, is_pass, audit_user_id, audit_user_type, audit_time, audit_remark, 
    create_time, update_time, is_delete, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biu_exam_arrange_audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biu_exam_arrange_audit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_exam_arrange_audit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditCriteria">
    delete from biu_exam_arrange_audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAudit" useGeneratedKeys="true">
    insert into biu_exam_arrange_audit (exam_arrange_id, is_pass, audit_user_id, 
      audit_user_type, audit_time, audit_remark, 
      create_time, update_time, is_delete, 
      delete_time)
    values (#{examArrangeId,jdbcType=INTEGER}, #{isPass,jdbcType=INTEGER}, #{auditUserId,jdbcType=INTEGER}, 
      #{auditUserType,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, #{auditRemark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, 
      #{deleteTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAudit" useGeneratedKeys="true">
    insert into biu_exam_arrange_audit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examArrangeId != null">
        exam_arrange_id,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="auditUserId != null">
        audit_user_id,
      </if>
      <if test="auditUserType != null">
        audit_user_type,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditRemark != null">
        audit_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examArrangeId != null">
        #{examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditUserType != null">
        #{auditUserType,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null">
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAuditCriteria" resultType="java.lang.Long">
    select count(*) from biu_exam_arrange_audit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biu_exam_arrange_audit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.examArrangeId != null">
        exam_arrange_id = #{record.examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="record.isPass != null">
        is_pass = #{record.isPass,jdbcType=INTEGER},
      </if>
      <if test="record.auditUserId != null">
        audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      </if>
      <if test="record.auditUserType != null">
        audit_user_type = #{record.auditUserType,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditRemark != null">
        audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biu_exam_arrange_audit
    set id = #{record.id,jdbcType=INTEGER},
      exam_arrange_id = #{record.examArrangeId,jdbcType=INTEGER},
      is_pass = #{record.isPass,jdbcType=INTEGER},
      audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      audit_user_type = #{record.auditUserType,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAudit">
    update biu_exam_arrange_audit
    <set>
      <if test="examArrangeId != null">
        exam_arrange_id = #{examArrangeId,jdbcType=INTEGER},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditUserType != null">
        audit_user_type = #{auditUserType,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null">
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.ExamArrangeAudit">
    update biu_exam_arrange_audit
    set exam_arrange_id = #{examArrangeId,jdbcType=INTEGER},
      is_pass = #{isPass,jdbcType=INTEGER},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_user_type = #{auditUserType,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{auditRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>