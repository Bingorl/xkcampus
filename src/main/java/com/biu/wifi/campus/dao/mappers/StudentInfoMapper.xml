<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biu.wifi.campus.dao.StudentInfoMapper">
    <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.StudentInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="school" jdbcType="VARCHAR" property="school"/>
        <result column="institute_id" jdbcType="INTEGER" property="instituteId"/>
        <result column="institute" jdbcType="VARCHAR" property="institute"/>
        <result column="major_id" jdbcType="INTEGER" property="majorId"/>
        <result column="major" jdbcType="VARCHAR" property="major"/>
        <result column="grade_id" jdbcType="INTEGER" property="gradeId"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="clazz" jdbcType="VARCHAR" property="clazz"/>
        <result column="stu_num" jdbcType="VARCHAR" property="stuNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_delete" jdbcType="SMALLINT" property="isDelete"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, school_id, school, institute_id, institute, major_id, major, grade_id, grade, 
    class_id, clazz, stu_num, create_time, update_time, is_delete, delete_time
  </sql>
    <select id="selectByExample" parameterType="com.biu.wifi.campus.dao.model.StudentInfoCriteria"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from biu_student_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biu_student_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.StudentInfoCriteria">
        delete from biu_student_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.biu.wifi.campus.dao.model.StudentInfo"
            useGeneratedKeys="true">
    insert into biu_student_info (school_id, school, institute_id, 
      institute, major_id, major, 
      grade_id, grade, class_id, 
      clazz, stu_num, create_time, 
      update_time, is_delete, delete_time
      )
    values (#{schoolId,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{instituteId,jdbcType=INTEGER}, 
      #{institute,jdbcType=VARCHAR}, #{majorId,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, 
      #{gradeId,jdbcType=INTEGER}, #{grade,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}, 
      #{clazz,jdbcType=VARCHAR}, #{stuNum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=SMALLINT}, #{deleteTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.biu.wifi.campus.dao.model.StudentInfo" useGeneratedKeys="true">
        insert into biu_student_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="instituteId != null">
                institute_id,
            </if>
            <if test="institute != null">
                institute,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="gradeId != null">
                grade_id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="clazz != null">
                clazz,
            </if>
            <if test="stuNum != null">
                stu_num,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="instituteId != null">
                #{instituteId,jdbcType=INTEGER},
            </if>
            <if test="institute != null">
                #{institute,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="gradeId != null">
                #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="clazz != null">
                #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="stuNum != null">
                #{stuNum,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.StudentInfoCriteria"
            resultType="java.lang.Integer">
        select count(*) from biu_student_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biu_student_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
            <if test="record.school != null">
                school = #{record.school,jdbcType=VARCHAR},
            </if>
            <if test="record.instituteId != null">
                institute_id = #{record.instituteId,jdbcType=INTEGER},
            </if>
            <if test="record.institute != null">
                institute = #{record.institute,jdbcType=VARCHAR},
            </if>
            <if test="record.majorId != null">
                major_id = #{record.majorId,jdbcType=INTEGER},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.gradeId != null">
                grade_id = #{record.gradeId,jdbcType=INTEGER},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=VARCHAR},
            </if>
            <if test="record.classId != null">
                class_id = #{record.classId,jdbcType=INTEGER},
            </if>
            <if test="record.clazz != null">
                clazz = #{record.clazz,jdbcType=VARCHAR},
            </if>
            <if test="record.stuNum != null">
                stu_num = #{record.stuNum,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=SMALLINT},
            </if>
            <if test="record.deleteTime != null">
                delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biu_student_info
        set id = #{record.id,jdbcType=INTEGER},
        school_id = #{record.schoolId,jdbcType=INTEGER},
        school = #{record.school,jdbcType=VARCHAR},
        institute_id = #{record.instituteId,jdbcType=INTEGER},
        institute = #{record.institute,jdbcType=VARCHAR},
        major_id = #{record.majorId,jdbcType=INTEGER},
        major = #{record.major,jdbcType=VARCHAR},
        grade_id = #{record.gradeId,jdbcType=INTEGER},
        grade = #{record.grade,jdbcType=VARCHAR},
        class_id = #{record.classId,jdbcType=INTEGER},
        clazz = #{record.clazz,jdbcType=VARCHAR},
        stu_num = #{record.stuNum,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_delete = #{record.isDelete,jdbcType=SMALLINT},
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.StudentInfo">
        update biu_student_info
        <set>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="instituteId != null">
                institute_id = #{instituteId,jdbcType=INTEGER},
            </if>
            <if test="institute != null">
                institute = #{institute,jdbcType=VARCHAR},
            </if>
            <if test="majorId != null">
                major_id = #{majorId,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="gradeId != null">
                grade_id = #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="clazz != null">
                clazz = #{clazz,jdbcType=VARCHAR},
            </if>
            <if test="stuNum != null">
                stu_num = #{stuNum,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.StudentInfo">
    update biu_student_info
    set school_id = #{schoolId,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      institute_id = #{instituteId,jdbcType=INTEGER},
      institute = #{institute,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      clazz = #{clazz,jdbcType=VARCHAR},
      stu_num = #{stuNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=SMALLINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>