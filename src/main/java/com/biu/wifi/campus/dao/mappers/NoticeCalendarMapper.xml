<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.biu.wifi.campus.dao.NoticeCalendarMapper">
    <resultMap id="BaseResultMap" type="com.biu.wifi.campus.dao.model.NoticeCalendar">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="notice_id" property="noticeId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="remind_date" property="remindDate" jdbcType="DATE"/>
        <result column="remind_time" property="remindTime" jdbcType="TIME"/>
        <result column="is_open" property="isOpen" jdbcType="SMALLINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="is_delete" property="isDelete" jdbcType="SMALLINT"/>
        <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, notice_id, user_id, remind_date, remind_time, is_open, remark, create_time, is_delete, 
    delete_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.biu.wifi.campus.dao.model.NoticeCalendarCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from biu_notice_calendar
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from biu_notice_calendar
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biu_notice_calendar
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendarCriteria">
        delete from biu_notice_calendar
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendar" useGeneratedKeys="true"
            keyProperty="id">
    insert into biu_notice_calendar (notice_id, user_id, remind_date, 
      remind_time, is_open, remark, 
      create_time, is_delete, delete_time
      )
    values (#{noticeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{remindDate,jdbcType=DATE}, 
      #{remindTime,jdbcType=TIME}, #{isOpen,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=SMALLINT}, #{deleteTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendar" useGeneratedKeys="true"
            keyProperty="id">
        insert into biu_notice_calendar
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="noticeId != null">
                notice_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="remindDate != null">
                remind_date,
            </if>
            <if test="remindTime != null">
                remind_time,
            </if>
            <if test="isOpen != null">
                is_open,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="noticeId != null">
                #{noticeId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="remindDate != null">
                #{remindDate,jdbcType=DATE},
            </if>
            <if test="remindTime != null">
                #{remindTime,jdbcType=TIME},
            </if>
            <if test="isOpen != null">
                #{isOpen,jdbcType=SMALLINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendarCriteria"
            resultType="java.lang.Integer">
        select count(*) from biu_notice_calendar
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biu_notice_calendar
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.noticeId != null">
                notice_id = #{record.noticeId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.remindDate != null">
                remind_date = #{record.remindDate,jdbcType=DATE},
            </if>
            <if test="record.remindTime != null">
                remind_time = #{record.remindTime,jdbcType=TIME},
            </if>
            <if test="record.isOpen != null">
                is_open = #{record.isOpen,jdbcType=SMALLINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=SMALLINT},
            </if>
            <if test="record.deleteTime != null">
                delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biu_notice_calendar
        set id = #{record.id,jdbcType=INTEGER},
        notice_id = #{record.noticeId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        remind_date = #{record.remindDate,jdbcType=DATE},
        remind_time = #{record.remindTime,jdbcType=TIME},
        is_open = #{record.isOpen,jdbcType=SMALLINT},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_delete = #{record.isDelete,jdbcType=SMALLINT},
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendar">
        update biu_notice_calendar
        <set>
            <if test="noticeId != null">
                notice_id = #{noticeId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="remindDate != null">
                remind_date = #{remindDate,jdbcType=DATE},
            </if>
            <if test="remindTime != null">
                remind_time = #{remindTime,jdbcType=TIME},
            </if>
            <if test="isOpen != null">
                is_open = #{isOpen,jdbcType=SMALLINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=SMALLINT},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.biu.wifi.campus.dao.model.NoticeCalendar">
    update biu_notice_calendar
    set notice_id = #{noticeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      remind_date = #{remindDate,jdbcType=DATE},
      remind_time = #{remindTime,jdbcType=TIME},
      is_open = #{isOpen,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=SMALLINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>